@page
@model CMS.Pages.Contract.PendingContractModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Pending Contract";
}
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<div>
    @if (Model.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            @Model.ErrorMessage
        </div>
    }

    @if (Model.Contracts == null || !Model.Contracts.Any())
    {
        <div class="alert alert-info" role="alert">
            Hiện chưa có hợp đồng nào chờ duyệt
        </div>
        <div>
            <button type="button" class="btn btn-primary" onclick="showAddContractModal()">
                <i class="bi bi-plus-circle"></i> Add New Contract
            </button>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-between align-items-center mb-3">
            <button type="button" class="btn btn-primary" onclick="showAddContractModal()">
                <i class="bi bi-plus-circle"></i> Add New Contract
            </button>
        </div>

        <table class="table table-bordered">
            <thead class="table-primary table-bordered">
                <tr>
                    <th>#</th>
                    <th>Tên hợp đồng</th>
                    <th>Loại</th>
                    <th>Ngày bắt đầu</th>
                    <th>Ngày kết thúc</th>
                    <th>Giá trị (VNĐ)</th>
                    <th>Trạng thái</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contract in Model.Contracts)
                {
                    <tr>
                        <td>@contract.ContractNumber</td>
                        <td>@contract.ContractName</td>
                        <td>@contract.ContractType</td>
                        <td>@contract.StartDate?.ToString("dd/MM/yyyy")</td>
                        <td>@contract.EndDate?.ToString("dd/MM/yyyy")</td>
                        <td>@contract.ContractValue?.ToString("N0")</td>
                        <td>@contract.ContractStatus</td>
                        <td>
                            <a href="javascript:void(0);" class="btn btn-info btn-sm" onclick="showContractDetail(@contract.AutoID)">
                                <i class="bi bi-eye-fill"></i>
                            </a>
                            <a href="javascript:void(0);" class="btn btn-warning btn-sm" onclick="showEditContractModal(@contract.AutoID)">
                                <i class="bi bi-pencil-fill"></i>
                            </a>
                            <a href="javascript:void(0);" class="btn btn-success btn-sm" onclick="showAddFileInvoiceModal(@contract.AutoID)">
                                <i class="bi bi-plus-circle"></i>
                            </a>
                            <a href="javascript:void(0);" class="btn btn-danger btn-sm" onclick="confirmDeleteContract(@contract.AutoID)">
                                <i class="bi bi-trash-fill"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <!--Phan Trang-->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Page("PendingContract", new { pageNumber = Model.CurrentPage - 1 })">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Page("PendingContract", new { pageNumber = i })">@i</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Page("PendingContract", new { pageNumber = Model.CurrentPage + 1 })">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>
<form method="post">
    @Html.AntiForgeryToken()
</form>

<!-- Modal Chi tiết hợp đồng -->
<div class="modal fade" id="contractDetailModal" tabindex="-1" aria-labelledby="contractDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết hợp đồng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <strong>Mã hợp đồng:</strong>
                        <span id="detail-contractNumber"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Tên hợp đồng:</strong>
                        <span id="detail-contractName"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Loại hợp đồng:</strong>
                        <span id="detail-contractType"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Trạng thái:</strong>
                        <span id="detail-contractStatus"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày bắt đầu:</strong>
                        <span id="detail-startDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày kết thúc:</strong>
                        <span id="detail-endDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Giá trị hợp đồng:</strong>
                        <span id="detail-contractValue"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Năm hợp đồng:</strong>
                        <span id="detail-contractYear"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày ký hợp đồng:</strong>
                        <span id="detail-contractDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Thời gian ký:</strong>
                        <span id="detail-contractTime"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Đối tác:</strong>
                        <span id="detail-partner"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Phòng ban:</strong>
                        <span id="detail-department"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Người tạo:</strong>
                        <span id="detail-createBy"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày tạo:</strong>
                        <span id="detail-createDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Cập nhật lần cuối bởi:</strong>
                        <span id="detail-lastUpdateBy"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày cập nhật lần cuối:</strong>
                        <span id="detail-lastUpdateDate"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tổng giá trị hóa đơn (đã thanh toán):</strong>
                        <span id="detail-totalInvoiceValue"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Trạng thái thanh toán:</strong>
                        <span id="detail-paymentStatus"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tệp đính kèm hợp đồng:</strong>
                        <div id="detail-contract-files" class="mt-2">
                            <!-- Contract files will be populated here -->
                        </div>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tệp đính kèm hóa đơn:</strong>
                        <div id="detail-invoice-files" class="mt-2">
                            <!-- Invoice files will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Thêm mới hợp đồng -->
<div class="modal fade" id="addContractModal" tabindex="-1" aria-labelledby="addContractModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm mới hợp đồng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addContractForm" enctype="multipart/form-data">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="contractName" class="form-label">Tên hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="contractName" name="ContractName" required>
                            </div>
                            <div class="mb-3">
                                <label for="contractType" class="form-label">Loại hợp đồng <span class="text-danger">*</span></label>
                                <select class="form-select" id="contractType" name="ContractType" required>
                                    <option value="Business">Business</option>
                                    <option value="Financial">Financial</option>
                                    <option value="Construction">Construction</option>
                                    <option value="HR">HR</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="contractNumber" class="form-label">Mã hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="contractNumber" name="ContractNumber" required>
                            </div>
                            <div class="mb-3">
                                <label for="contractYear" class="form-label">Năm hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="contractYear" name="ContractYear" required>
                            </div>
                            <div class="mb-3">
                                <label for="contractValue" class="form-label">Giá trị hợp đồng</label>
                                <input type="number" class="form-control" id="contractValue" name="ContractValue">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="contractDate" class="form-label">Ngày ký hợp đồng <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="contractDate" name="ContractDate" required>
                            </div>
                            <div class="mb-3">
                                <label for="contractTime" class="form-label">Thời gian ký</label>
                                <input type="text" class="form-control" id="contractTime" name="ContractTime">
                            </div>
                            <div class="mb-3">
                                <label for="startDate" class="form-label">Ngày bắt đầu <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="startDate" name="StartDate" required>
                            </div>
                            <div class="mb-3">
                                <label for="endDate" class="form-label">Ngày kết thúc <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="endDate" name="EndDate" required>
                            </div>
                            <div class="mb-3">
                                <label for="partnerID" class="form-label">Đối tác <span class="text-danger">*</span></label>
                                <select class="form-select" id="partnerID" name="PartnerID" required>
                                    <option value="">Chọn đối tác</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="files" class="form-label">Tệp đính kèm hợp đồng</label>
                                <input type="file" class="form-control" id="files" name="files" multiple accept=".pdf,.doc,.docx,.jpg,.png">
                            </div>
                        </div>
                    </div>
                    <!-- Phần thêm hóa đơn -->
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="addInvoiceCheckbox" onchange="toggleInvoiceFields()">
                            <label class="form-check-label" for="addInvoiceCheckbox">
                                Thêm hóa đơn kèm hợp đồng
                            </label>
                        </div>
                    </div>
                    <div id="invoiceFields" style="display: none;">
                        <h6>Thông tin hóa đơn</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="invoiceName" class="form-label">Tên hóa đơn</label>
                                    <input type="text" class="form-control" id="invoiceName" name="InvoiceName">
                                </div>
                                <div class="mb-3">
                                    <label for="issueDate" class="form-label">Ngày phát hành</label>
                                    <input type="date" class="form-control" id="issueDate" name="IssueDate">
                                </div>
                                <div class="mb-3">
                                    <label for="dueDate" class="form-label">Ngày đến hạn</label>
                                    <input type="date" class="form-control" id="dueDate" name="DueDate">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="invoiceValue" class="form-label">Giá trị hóa đơn</label>
                                    <input type="number" class="form-control" id="invoiceValue" name="InvoiceValue">
                                </div>
                                <div class="mb-3">
                                    <label for="invoiceStatus" class="form-label">Trạng thái</label>
                                    <select class="form-select" id="invoiceStatus" name="InvoiceStatus">
                                        <option value="">Chọn trạng thái</option>
                                        <option value="Pending">Chưa thanh toán</option>
                                        <option value="Paid">Đã thanh toán</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="invoiceFiles" class="form-label">Tệp đính kèm hóa đơn</label>
                                    <input type="file" class="form-control" id="invoiceFiles" name="invoiceFiles" multiple accept=".pdf,.doc,.docx,.jpg,.png">
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="saveNewContract()">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Chỉnh sửa hợp đồng -->
<div class="modal fade" id="editContractModal" tabindex="-1" aria-labelledby="editContractModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chỉnh sửa hợp đồng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editContractForm" enctype="multipart/form-data">
                    <input type="hidden" id="editContractId" name="AutoID">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="editContractName" class="form-label">Tên hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="editContractName" name="ContractName" required>
                            </div>
                            <div class="mb-3">
                                <label for="editContractType" class="form-label">Loại hợp đồng <span class="text-danger">*</span></label>
                                <select class="form-select" id="editContractType" name="ContractType" required>
                                    <option value="Business">Business</option>
                                    <option value="Financial">Financial</option>
                                    <option value="Construction">Construction</option>
                                    <option value="HR">HR</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="editContractNumber" class="form-label">Mã hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="editContractNumber" name="ContractNumber" required>
                            </div>
                            <div class="mb-3">
                                <label for="editContractYear" class="form-label">Năm hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="editContractYear" name="ContractYear" required>
                            </div>
                            <div class="mb-3">
                                <label for="editContractValue" class="form-label">Giá trị hợp đồng</label>
                                <input type="number" class="form-control" id="editContractValue" name="ContractValue">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="editContractDate" class="form-label">Ngày ký hợp đồng <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="editContractDate" name="ContractDate" required>
                            </div>
                            <div class="mb-3">
                                <label for="editContractTime" class="form-label">Thời gian ký</label>
                                <input type="text" class="form-control" id="editContractTime" name="ContractTime">
                            </div>
                            <div class="mb-3">
                                <label for="editStartDate" class="form-label">Ngày bắt đầu <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="editStartDate" name="StartDate" required>
                            </div>
                            <div class="mb-3">
                                <label for="editEndDate" class="form-label">Ngày kết thúc <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="editEndDate" name="EndDate" required>
                            </div>
                            <div class="mb-3">
                                <label for="editPartnerID" class="form-label">Đối tác <span class="text-danger">*</span></label>
                                <select class="form-select" id="editPartnerID" name="PartnerID" required>
                                    <option value="">Chọn đối tác</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="editFiles" class="form-label">Thêm tệp đính kèm hợp đồng</label>
                                <input type="file" class="form-control" id="editFiles" name="files" multiple accept=".pdf,.doc,.docx,.jpg,.png">
                            </div>
                        </div>
                    </div>
                    <!-- Danh sách tệp đính kèm hợp đồng -->
                    <div class="mb-3">
                        <strong>Tệp đính kèm hợp đồng hiện tại:</strong>
                        <div id="edit-contract-files" class="mt-2"></div>
                    </div>
                    <!-- Danh sách hóa đơn hiện tại -->
                    <div class="mb-3">
                        <strong>Hóa đơn hiện tại:</strong>
                        <div id="edit-invoice-files" class="mt-2"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="saveEditedContract()">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Thêm tệp/hoá đơn -->
<div class="modal fade" id="addFileInvoiceModal" tabindex="-1" aria-labelledby="addFileInvoiceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm tệp hoặc hóa đơn</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addFileInvoiceForm" enctype="multipart/form-data">
                    <input type="hidden" id="addFileContractId" name="ContractId">
                    <div class="mb-3">
                        <label for="addContractFiles" class="form-label">Thêm tệp đính kèm hợp đồng</label>
                        <input type="file" class="form-control" id="addContractFiles" name="files" multiple accept=".pdf,.doc,.docx,.jpg,.png">
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="addInvoiceCheckbox2" onchange="toggleInvoiceFields2()">
                            <label class="form-check-label" for="addInvoiceCheckbox2">
                                Thêm hóa đơn
                            </label>
                        </div>
                    </div>
                    <div id="invoiceFields2" style="display: none;">
                        <h6>Thông tin hóa đơn</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="addInvoiceName" class="form-label">Tên hóa đơn</label>
                                    <input type="text" class="form-control" id="addInvoiceName" name="InvoiceName">
                                </div>
                                <div class="mb-3">
                                    <label for="addIssueDate" class="form-label">Ngày phát hành</label>
                                    <input type="date" class="form-control" id="addIssueDate" name="IssueDate">
                                </div>
                                <div class="mb-3">
                                    <label for="addDueDate" class="form-label">Ngày đến hạn</label>
                                    <input type="date" class="form-control" id="addDueDate" name="DueDate">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="addInvoiceValue" class="form-label">Giá trị hóa đơn</label>
                                    <input type="number" class="form-control" id="addInvoiceValue" name="InvoiceValue">
                                </div>
                                <div class="mb-3">
                                    <label for="addInvoiceStatus" class="form-label">Trạng thái</label>
                                    <select class="form-select" id="addInvoiceStatus" name="InvoiceStatus">
                                        <option value="">Chọn trạng thái</option>
                                        <option value="Pending">Chưa thanh toán</option>
                                        <option value="Paid">Đã thanh toán</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="addInvoiceFiles" class="form-label">Tệp đính kèm hóa đơn</label>
                                    <input type="file" class="form-control" id="addInvoiceFiles" name="invoiceFiles" multiple accept=".pdf,.doc,.docx,.jpg,.png">
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="saveFileInvoice()">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Xác nhận xóa hợp đồng -->
<div class="modal fade" id="deleteContractModal" tabindex="-1" aria-labelledby="deleteContractModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa hợp đồng này không?</p>
                <p class="text-danger">Hợp đồng sẽ được dấu là đã xóa và không còn hiển thị trong danh sách.</p>
                <input type="hidden" id="deleteContractId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" onclick="deleteContract()">Xóa</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        // Helper function to show modal
        function showModal(modalId) {
            if (typeof bootstrap === 'undefined' || !bootstrap.Modal) {
                console.error("Bootstrap Modal is not available.");
                alert("Lỗi: Không thể hiển thị modal.");
                return;
            }
            const modalElement = document.getElementById(modalId);
            if (modalElement) {
                new bootstrap.Modal(modalElement).show();
            } else {
                console.error(`Modal with ID ${modalId} not found.`);
            }
        }

        // Load partners
        function loadPartners() {
            console.log("Loading partners...");
            fetch('?handler=Partners', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(res => res.json())
            .then(data => {
                const partnerSelect = document.getElementById('partnerID');
                partnerSelect.innerHTML = '<option value="">Chọn đối tác</option>';
                data.forEach(partner => {
                    const option = document.createElement('option');
                    option.value = partner.id;
                    option.textContent = partner.companyName;
                    partnerSelect.appendChild(option);
                });
            })
            .catch(err => {
                console.error('Lỗi khi tải danh sách đối tác:', err);
                alert("Lỗi khi tải danh sách đối tác.");
            });
        }

        // Load partners for edit modal and pre-select current partner
        function loadPartnersForEdit(currentPartnerId) {
            fetch('?handler=Partners', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(res => res.json())
            .then(data => {
                const partnerSelect = document.getElementById('editPartnerID');
                partnerSelect.innerHTML = '<option value="">Chọn đối tác</option>';
                data.forEach(partner => {
                    const option = document.createElement('option');
                    option.value = partner.id;
                    option.textContent = partner.companyName;
                    if (partner.id === currentPartnerId) {
                        option.selected = true;
                    }
                    partnerSelect.appendChild(option);
                });
            })
            .catch(err => {
                console.error('Lỗi khi tải danh sách đối tác:', err);
                alert("Lỗi khi tải danh sách đối tác.");
            });
        }

        // Show Contract Detail
        function showContractDetail(id) {
            console.log("Opening contract detail for ID:", id);
            fetch(`?handler=ContractDetail&id=${id}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + (text || res.statusText));
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    const contract = data.contract;
                    document.getElementById('detail-contractNumber').textContent = contract.contractNumber || '';
                    document.getElementById('detail-contractName').textContent = contract.contractName || '';
                    document.getElementById('detail-contractType').textContent = contract.contractType || '';
                    document.getElementById('detail-contractStatus').textContent = contract.contractStatus || '';
                    document.getElementById('detail-startDate').textContent = formatDate(contract.startDate) || '';
                    document.getElementById('detail-endDate').textContent = formatDate(contract.endDate) || '';
                    document.getElementById('detail-contractValue').textContent = formatNumber(contract.contractValue) + ' VNĐ' || '';
                    document.getElementById('detail-contractYear').textContent = contract.contractYear || '';
                    document.getElementById('detail-contractDate').textContent = formatDate(contract.contractDate) || '';
                    document.getElementById('detail-contractTime').textContent = contract.contractTime || '';
                    document.getElementById('detail-partner').textContent = contract.partnerName || '';
                    document.getElementById('detail-department').textContent = contract.departmentName || '';
                    document.getElementById('detail-createBy').textContent = contract.createBy || '';
                    document.getElementById('detail-createDate').textContent = formatDate(contract.createDate) || '';
                    document.getElementById('detail-lastUpdateBy').textContent = contract.lastUpdateBy || '';
                    document.getElementById('detail-lastUpdateDate').textContent = formatDate(contract.lastUpdateDate) || '';
                    document.getElementById('detail-totalInvoiceValue').textContent = formatNumber(contract.totalInvoiceValue) + ' VNĐ' || '0 VNĐ';

                    const contractValue = contract.contractValue || 0;
                    const totalInvoiceValue = contract.totalInvoiceValue || 0;
                    const paymentStatusElement = document.getElementById('detail-paymentStatus');
                    if (totalInvoiceValue >= contractValue && contractValue > 0) {
                        paymentStatusElement.textContent = 'Đã thanh toán xong';
                        paymentStatusElement.className = 'text-success';
                    } else if (totalInvoiceValue < contractValue) {
                        const remaining = contractValue - totalInvoiceValue;
                        paymentStatusElement.textContent = `Còn thiếu: ${formatNumber(remaining)} VNĐ`;
                        paymentStatusElement.className = 'text-danger';
                    } else {
                        paymentStatusElement.textContent = 'Chưa thanh toán';
                        paymentStatusElement.className = 'text-warning';
                    }

                    const contractFilesContainer = document.getElementById('detail-contract-files');
                    contractFilesContainer.innerHTML = '';
                    if (contract.contractFiles && contract.contractFiles.length > 0) {
                        contract.contractFiles.forEach(file => {
                            const fileElement = document.createElement('div');
                            fileElement.className = 'mb-1';
                            fileElement.innerHTML = `
                                <a href="?handler=DownloadFile&id=${file.autoID}" class="text-primary" download>
                                    <i class="bi bi-file-earmark-arrow-down"></i> ${file.fileName}
                                </a>
                            `;
                            contractFilesContainer.appendChild(fileElement);
                        });
                    } else {
                        contractFilesContainer.innerHTML = '<p>Không có tệp đính kèm</p>';
                    }

                    const invoiceFilesContainer = document.getElementById('detail-invoice-files');
                    invoiceFilesContainer.innerHTML = '';
                    if (contract.invoiceFiles && contract.invoiceFiles.length > 0) {
                        contract.invoiceFiles.forEach(file => {
                            const fileElement = document.createElement('div');
                            fileElement.className = 'mb-1';
                            fileElement.innerHTML = `
                                <a href="?handler=DownloadFile&id=${file.autoID}" class="text-primary" download>
                                    <i class="bi bi-file-earmark-arrow-down"></i> ${file.fileName}
                                </a>
                            `;
                            invoiceFilesContainer.appendChild(fileElement);
                        });
                    } else {
                        invoiceFilesContainer.innerHTML = '<p>Không có tệp đính kèm hóa đơn</p>';
                    }

                    showModal('contractDetailModal');
                } else {
                    alert("Không thể lấy thông tin hợp đồng: " + (data.message || "Không xác định"));
                }
            })
            .catch(err => {
                console.error("Error:", err);
                alert("Lỗi: " + err.message);
            });
        }

        // Show Edit Contract Modal
        function showEditContractModal(id) {
            console.log("Opening edit contract modal for ID:", id);
            fetch(`?handler=ContractDetail&id=${id}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + (text || res.statusText));
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    const contract = data.contract;
                    document.getElementById('editContractId').value = contract.autoID;
                    document.getElementById('editContractName').value = contract.contractName || '';
                    document.getElementById('editContractType').value = contract.contractType || '';
                    document.getElementById('editContractNumber').value = contract.contractNumber || '';
                    document.getElementById('editContractYear').value = contract.contractYear || '';
                    document.getElementById('editContractValue').value = contract.contractValue || '';
                    document.getElementById('editContractDate').value = formatDateForInput(contract.contractDate) || '';
                    document.getElementById('editContractTime').value = contract.contractTime || '';
                    document.getElementById('editStartDate').value = formatDateForInput(contract.startDate) || '';
                    document.getElementById('editEndDate').value = formatDateForInput(contract.endDate) || '';

                    // Load partners and pre-select the current partner
                    loadPartnersForEdit(contract.partnerID);

                    // Populate contract files
                    const contractFilesContainer = document.getElementById('edit-contract-files');
                    contractFilesContainer.innerHTML = '';
                    if (contract.contractFiles && contract.contractFiles.length > 0) {
                        contract.contractFiles.forEach(file => {
                            const fileElement = document.createElement('div');
                            fileElement.className = 'mb-1';
                            fileElement.innerHTML = `
                                <span>${file.fileName}</span>
                                <button type="button" class="btn btn-danger btn-sm ms-2" onclick="removeFile(${file.autoID})">
                                    <i class="bi bi-trash-fill"></i>
                                </button>
                            `;
                            contractFilesContainer.appendChild(fileElement);
                        });
                    } else {
                        contractFilesContainer.innerHTML = '<p>Không có tệp đính kèm</p>';
                    }

                    // Populate invoice files
                    const invoiceFilesContainer = document.getElementById('edit-invoice-files');
                    invoiceFilesContainer.innerHTML = '';
                    if (contract.invoiceFiles && contract.invoiceFiles.length > 0) {
                        contract.invoiceFiles.forEach(file => {
                            const fileElement = document.createElement('div');
                            fileElement.className = 'mb-1';
                            fileElement.innerHTML = `
                                <span>${file.fileName}</span>
                                <button type="button" class="btn btn-danger btn-sm ms-2" onclick="removeFile(${file.autoID})">
                                    <i class="bi bi-trash-fill"></i>
                                </button>
                            `;
                            invoiceFilesContainer.appendChild(fileElement);
                        });
                    } else {
                        invoiceFilesContainer.innerHTML = '<p>Không có hóa đơn</p>';
                    }

                    showModal('editContractModal');
                } else {
                    alert("Không thể lấy thông tin hợp đồng: " + (data.message || "Không xác định"));
                }
            })
            .catch(err => {
                console.error("Error:", err);
                alert("Lỗi: " + err.message);
            });
        }

        // Show Add File/Invoice Modal
        function showAddFileInvoiceModal(contractId) {
            console.log("Opening add file/invoice modal for contract ID:", contractId);
            document.getElementById('addFileInvoiceForm').reset();
            document.getElementById('addFileContractId').value = contractId;
            document.getElementById('addInvoiceCheckbox2').checked = false;
            toggleInvoiceFields2();
            showModal('addFileInvoiceModal');
        }

        // Format date
        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toLocaleDateString('vi-VN');
        }

        // Format date for input
        function formatDateForInput(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toISOString().split('T')[0];
        }

        // Format number
        function formatNumber(value) {
            if (value === null || value === undefined) return '';
            return new Intl.NumberFormat('vi-VN').format(value);
        }

        // Show Add Contract Modal
        function showAddContractModal() {
            console.log("Opening add contract modal");
            document.getElementById('addContractForm').reset();
            document.getElementById('addInvoiceCheckbox').checked = false;
            toggleInvoiceFields();
            loadPartners();
            showModal('addContractModal');
        }

        // Toggle Invoice Fields
        function toggleInvoiceFields() {
            const invoiceFields = document.getElementById('invoiceFields');
            const checkbox = document.getElementById('addInvoiceCheckbox');
            invoiceFields.style.display = checkbox.checked ? 'block' : 'none';
        }

        // Toggle Invoice Fields for Add File/Invoice Modal
        function toggleInvoiceFields2() {
            const invoiceFields = document.getElementById('invoiceFields2');
            const checkbox = document.getElementById('addInvoiceCheckbox2');
            invoiceFields.style.display = checkbox.checked ? 'block' : 'none';
        }

        // Save new contract
        function saveNewContract() {
            const form = document.getElementById('addContractForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const formData = new FormData(form);
            fetch("?handler=AddContract", {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: formData
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + text);
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    alert(`Thêm mới hợp đồng thành công`);
                    location.reload();
                } else {
                    alert("Thêm hợp đồng thất bại: " + (data.message || "Không xác định"));
                }
            })
            .catch(err => {
                console.error("Error saving contract:", err);
                alert("Lỗi khi lưu hợp đồng: " + err.message);
            });
        }

        // Save edited contract
        function saveEditedContract() {
            const form = document.getElementById('editContractForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const formData = new FormData(form);
            fetch('?handler=EditContract', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: formData
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + text);
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    alert('Cập nhật hợp đồng thành công');
                    location.reload();
                } else {
                    alert('Cập nhật hợp đồng thất bại: ' + (data.message || 'Không xác định'));
                }
            })
            .catch(err => {
                console.error('Lỗi khi cập nhật hợp đồng:', err);
                alert('Lỗi khi cập nhật hợp đồng: ' + err.message);
            });
        }

        // Save new file/invoice
        function saveFileInvoice() {
            const form = document.getElementById('addFileInvoiceForm');
            const formData = new FormData(form);
            fetch('?handler=AddFileInvoice', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: formData
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + text);
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    alert('Thêm tệp/hoá đơn thành công');
                    location.reload();
                } else {
                    alert('Thêm tệp/hoá đơn thất bại: ' + (data.message || 'Không xác định'));
                }
            })
            .catch(err => {
                console.error('Lỗi khi thêm tệp/hoá đơn:', err);
                alert('Lỗi khi thêm tệp/hoá đơn: ' + err.message);
            });
        }

        // Remove file
        function removeFile(fileId) {
            if (confirm('Bạn có chắc chắn muốn xóa tệp này không?')) {
                fetch(`?handler=RemoveFile`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ fileId: fileId })
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        alert('Xóa tệp thành công');
                        // Reload the edit modal with updated data
                        const contractId = document.getElementById('editContractId').value;
                        showEditContractModal(contractId);
                    } else {
                        alert('Xóa tệp thất bại: ' + (data.message || 'Không xác định'));
                    }
                })
                .catch(err => {
                    console.error('Lỗi khi xóa tệp:', err);
                    alert('Lỗi khi xóa tệp: ' + err.message);
                });
            }
        }

        // Confirm delete contract
        function confirmDeleteContract(id) {
            console.log("Confirm delete for contract ID:", id);
            document.getElementById('deleteContractId').value = id;
            showModal('deleteContractModal');
        }

        // Delete contract
        function deleteContract() {
            const id = document.getElementById('deleteContractId').value;
            fetch("?handler=DeleteContract", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ id: parseInt(id) })
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + (text || res.statusText));
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    alert("Xóa hợp đồng thành công");
                    location.reload();
                } else {
                    alert("Xóa hợp đồng thất bại: " + (data.message || "Không xác định"));
                }
            })
            .catch(err => {
                console.error("Error deleting contract:", err);
                alert("Lỗi: " + err.message);
            });
        }
    </script>
}